(require 'etags)
(provide 'my-tags)

(defvar my-etag-c "*.c"
  "* Extension for C files, or any other files you want in the list.")
(defvar my-etag-h "*.h"
  "* Extension for header files, or any other files you want in the
list after `my-etag-c'.")

;;;###autoload
(defun my-etag-tree (&optional dir buf)
  "Call etags on an entire tree rather than just one directory.
If buf is defined and is not empty, it is assumed to contain lines of
files to perform etags on."
  (interactive)
  (unless dir
    (if (interactive-p)
	  (setq dir (read-directory-name "Dir: " nil nil t))
	(setq dir default-directory)))
  (if buf
      (when (stringp buf) (setq buf (get-buffer-create buf)))
    (setq buf (get-buffer-create "*etag tree*"))
    ;; Emacs does not have (erase-buffer buf) :(
    (save-current-buffer (set-buffer buf) (erase-buffer)))

  (setq dir (expand-file-name dir))

  (when (eq (buffer-size buf) 0)
    ;; Doing the find in two steps seems to work better
    (call-process "find" nil (list buf nil) nil dir "-name" my-etag-c)
    (call-process "find" nil (list buf nil) nil dir "-name" my-etag-h))

  (with-current-buffer buf
    (call-process-region (point-min) (point-max)
			 "etags" nil nil nil
			 "-o" (concat dir "TAGS") "-"))
    )
