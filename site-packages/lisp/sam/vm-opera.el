(defcustom vm-opera-program "opera"
  "*Name of program to use to run Opera.
`vm-mouse-send-url-to-opera' uses this."
  :type 'string)

(defcustom vm-opera-program-switches nil
  "*List of command line switches to pass to Opera."
  :type '(list string))

;;;###autoload
(defun vm-opera-init ()
  (interactive)
  (append-to-list `vm-menu-url-browser-menu
		  ["Opera"
		   (vm-mouse-send-url-at-position (point)
						  'vm-mouse-send-url-to-opera)
		   t]))

(defun vm-mouse-send-url-to-opera (url &optional new-opera new-window)
  ;; Change commas to %2C to avoid confusing opera -remote.
  (while (string-match "," url)
    (setq url (replace-match "%2C" nil t url)))
  (message "Sending URL to Opera...")
  (if new-opera
      (apply 'vm-run-background-command vm-opera-program
	     (append vm-opera-program-switches (list url)))
    (or (equal 0 (apply 'vm-run-command vm-opera-program
			(append vm-opera-program-switches
				(list "-remote"
				      (concat "openURL(" url
					      (if new-window ",new-window" "")
					      ")")))))
	(vm-mouse-send-url-to-opera url t new-window)))
  (message "Sending URL to Opera... done"))

(defun vm-mouse-send-url-to-opera-new-window (url)
  (vm-mouse-send-url-to-opera url nil t))

(provide 'vm-opera)
