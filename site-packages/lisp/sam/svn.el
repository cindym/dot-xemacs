(defun svn-cat (&optional rev)
  (interactive)
  (unless rev (setq rev "HEAD"))
  (let* ((fname (file-name-nondirectory (buffer-file-name)))
	 (ext (file-name-extension fname))
	 (bufname (concat
		   (file-name-sans-extension fname)
		   "_" rev
		   (if ext ".") ext))
	 (buf (get-buffer-create bufname))
	 (catname (concat fname "@" rev)))
    (empty-buffer buf)
    (call-process "svn" nil buf nil "cat" catname)
    (set-buffer-modified-p nil buf)
    (when (interactive-p) (message "svn cat to buffer %s" bufname))
    buf))

;;;###autoload
(defun svn-diff ()
  (interactive)
  (let ((buf (svn-cat)))
    (ediff-buffers (current-buffer) buf)))

;;;###autoload
(defalias 'svn-ediff 'svn-diff)


(defun svn-cmd (cmd)
  (let* ((fname (file-name-nondirectory (buffer-file-name)))
	 (buff (get-buffer-create "*svn output*"))
	 (outwin (display-buffer buff)))
    (compilation-set-window-height outwin)
    (call-process "svn" nil buff t cmd fname)
    (revert-buffer nil t t)
    ))


;;;###autoload
(defun svn-revert ()
  (interactive)
  (svn-cmd "revert"))

;;;###autoload
(defun svn-up ()
  (interactive)
  (svn-cmd "up"))


(provide 'svn)
(require 'compile)
