(defvar sla-buf "*sla files*" "* SLA file list buffer")

;;(defvar gg-svn-url "svn://localhost/gg") ;; Sandbox
(defvar gg-svn-url "svn://redbox/goldengate")

(defvar gg-lxr-url "http://sam-server/lxr/http")


(add-to-list 'my-compile-dir-list '(".*/LM2.[0-9.]+/") t)

;; throughput engine must be before sla proper
(add-to-list 'my-compile-dir-list
	     (list (concat gg-svn-url "/.*/sla[a-z0-9-]*/throughput-engine/")
		   "throughputengine" 'sla-build) t)
(add-to-list 'my-compile-dir-list
	     (list (concat gg-svn-url "/.*/sla[a-z0-9-]*/")
		   "sla" 'sla-build) t)

(add-to-list 'my-compile-dir-list
	     (list (concat gg-svn-url "/.*/vpn/src/") "vpn" 'afore-build) t)

(add-to-list 'my-compile-dir-list
	     (list (concat gg-svn-url "/.*/util/vnodecom/") "vnodecom" 'afore-build) t)

(add-to-list 'my-compile-dir-list
	     (list (concat gg-svn-url "/.*/util/portmgr/") nil 'afore-build) t)

;; *****
;; SLA

(eval-when-compile (require 'etags))

(defvar sla-dir nil "SLA directory. Set in `sla-build'.")
(make-variable-buffer-local 'sla-dir)

(defun sla-etags (&optional force)
  (interactive "P")
  (unless sla-dir (error "No SLA directory associated with this buffer."))
  ;; SAM If sla-img older than TAGS, drop out?
  ;; SAM How do we decide when to rebuild sla-buf?
  (when force (kill-buffer sla-buf))
  (my-tag-tree sla-dir sla-buf))

(defun sla-build (dir arg)
  ;; Correct for throughputengine directory
  (when (string= arg "throughputengine")
      (setq dir (expand-file-name (concat dir "/.."))))

  (tab-indent-2 dir arg)

  (setq lxr-url gg-lxr-url lxr-version "sla" lxr-base dir)

  (setq mode-name (concat "gg-" mode-name))

  ;; etags
  (setq sla-dir (concat dir "/"))
  (setq buffer-tag-table dir)
  (add-hook 'my-compile-after-hooks 'sla-etags)

  ;; sla is weird in that it must be built from the directory *above* sla
  (let ((top-dir (expand-file-name (concat dir "/.."))))

    ;; Note that compile-command will already be buffer local
    (setq compile-command (concat "make -C " top-dir " " arg))

    (set (make-local-variable 'make-clean-command)
	 (concat "make -C " top-dir " " arg "-clean " arg))))

;; *****

(defun afore-build (dir arg)
  ;; Sighhh.... vpn source uses 2 and 3 and sometimes 4
  ;; vnodecom and portmgr use 4
  (space-indent-4 dir arg)

  ;; Note that compile-command will already be buffer local
  (setq compile-command (concat "make -C " dir))

  (set (make-local-variable 'make-clean-command)
       (concat "make -C " dir " clean; rm -f TAGS"))

  (add-hook 'my-compile-after-hooks 'my-tag-simple)

  (setq mode-name (concat "gg-" mode-name))

  (when arg
    (setq lxr-url gg-lxr-url lxr-version arg lxr-base dir))
  )

;; *****

;; Codebase contains too much bogus whitespace
(whitespace-global-mode 0)

(provide 'afore)
