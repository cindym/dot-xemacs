;;; intellimouse.el - do something with the scroll wheel

;; Copyright (C) 2000-2011 Sean MacLennan

;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 2, or (at your option)
;; any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with GNU Emacs; see the file COPYING.  If not, write to the
;; Free Software Foundation, Inc., 59 Temple Place - Suite 330,
;; Boston, MA 02111-1307, USA.

(defvar fine-scroll-lines 3 "*Number of lines to fine scroll")

(eval-when-compile (require 'cl))

(defmacro intellimouse-feature-cond (&rest clauses)
  "Test CLAUSES for feature at compile time.
Each clause is (FEATURE BODY...)."
  (dolist (x clauses)
    (let ((body (cdr x)))
      (when (featurep (car x))
	(return (cons 'progn body))))))

(intellimouse-feature-cond
 (xemacs
  ;; Using the mouse-* keys works under XEmacs but displays an irritating button* message
  (global-set-key [button4] 'fine-scroll-down)
  (global-set-key [button5] 'fine-scroll-up)
  (global-set-key [(shift button4)] 'my-scroll-down-command)
  (global-set-key [(shift button5)] 'my-scroll-up-command)

  ;; This is required to disable mwheel.
  (dolist (key '([(mouse-4)] [(mouse-5)] [(shift mouse-4)] [(shift mouse-5)]))
    (global-set-key key nil)))

 (emacs
  (eval-when-compile
    (require 'extent)
    (fset 'scroll-down-command 'scroll-down)
    (fset 'scroll-up-command 'scroll-up))

  (global-set-key [(mouse-4)] 'fine-scroll-down)
  (global-set-key [(mouse-5)] 'fine-scroll-up)
  (global-set-key [(shift mouse-4)] 'my-scroll-down-command)
  (global-set-key [(shift mouse-5)] 'my-scroll-down-command)))

(defun my-scroll-down-command (event)
  (interactive "e")
  (with-selected-window (event-window event)
      (scroll-down-command)))

(defun my-scroll-up-command (event)
  (interactive "e")
  (with-selected-window (event-window event)
    (scroll-up-command)))

(defun fine-scroll-down (event)
  (interactive "e")
  (with-selected-window (event-window event)
      (scroll-down-command fine-scroll-lines)))

(defun fine-scroll-up (event)
  (interactive "e")
  (with-selected-window (event-window event)
    (scroll-up-command fine-scroll-lines)))

(provide 'intellimouse)
