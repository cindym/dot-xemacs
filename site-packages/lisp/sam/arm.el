(defun my-asm-mode-set-comment-hook ()
  (when (string-match ".S$" (buffer-file-name))
    ;; asm files ending in .S are usually arm assembler
    (setq asm-comment-char ?@)))
;;(add-hook 'asm-mode-set-comment-hook 'my-asm-mode-set-comment-hook)

(defun my-asm-mode-hook ()
  ;; asm files ending in .S are usually arm assembler
  (when (string-match ".S$" (buffer-file-name))
    ;; Get the newlines right
    ;; `newline-and-indent' calls `indent-line-function'
    (set (make-local-variable 'indent-line-function) 'indent-relative)
    (define-key asm-mode-map "\C-m"	'newline-and-indent)
    ;; Get the labels right
    (defun my-asm-colon ()
      "Insert a colon; if it follows a label, delete the label's indentation."
      (interactive)
      (save-excursion
	(beginning-of-line)
	(if (looking-at "[ \t]+\\(\\sw\\|\\s_\\)+$")
	    (delete-horizontal-space)))
      (insert ":")
      (indent-relative))
    (define-key asm-mode-map ":"	'my-asm-colon)
    ;; Get the comments right
    (setq comment-column 48)))
;;(add-hook 'asm-mode-hook 'my-asm-mode-hook)
